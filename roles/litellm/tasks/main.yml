---

- name: Assert that all required inputs have been provided.
  ansible.builtin.assert:
    that:
      - litellm_models is defined
      - litellm_models is iterable

- name: Ensure tesseract user exists.
  register: tesseract_user_details
  ansible.builtin.user:
    name: "{{ tesseract_username }}"

- name: Ensure python3 and venv are installed.
  ansible.builtin.package:
    name:
      - python3
      - python3-pip
      - python3-venv
    state: present
    update_cache: true

- name: Create litellm directory.
  ansible.builtin.file:
    path: "/opt/litellm"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create venv directory.
  ansible.builtin.file:
    path: "/opt/litellm/venv"
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create venv.
  ansible.builtin.command:
    cmd: python3 -m venv /opt/litellm/venv
    creates: "/opt/litellm/venv/bin/activate"

- name: Install LiteLLM proxy in venv.
  ansible.builtin.command:
    cmd: "/opt/litellm/venv/bin/pip install 'litellm[proxy]'"
    creates: "/opt/litellm/venv/bin/litellm"

- name: Template the LiteLLM config file.
  ansible.builtin.template:
    src: templates/config.yaml.j2
    dest: "/opt/litellm/config.yaml"
    owner: root
    group: root
    mode: '0755'
  notify: restart litellm

- name: Deploy systemd service.
  ansible.builtin.template:
    src: templates/litellm.service.j2
    dest: "/etc/systemd/system/litellm.service"
    owner: root
    group: root
    mode: '0755'
  notify: restart litellm

- name: Enable and start LiteLLM proxy.
  ansible.builtin.systemd:
    name: "litellm"
    enabled: true
    state: started
